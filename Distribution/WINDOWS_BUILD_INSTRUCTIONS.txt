🪟 WINDOWS BUILD INSTRUCTIONS
==============================

Since we're on macOS, we can't directly build Windows executables.
Here are your options to get the Windows build:

📋 OPTION 1: Use GitHub Actions (Recommended)
---------------------------------------------
1. The Windows build should automatically be created via GitHub Actions
2. Go to: https://github.com/your-username/NOA_image_app/actions
3. Find the latest workflow run
4. Download the "SpermVerificationApp-Windows" artifact
5. Extract the downloaded ZIP file
6. Copy the contents to this "Windows" folder

📋 OPTION 2: Build Locally on Windows Machine ⭐
-------------------------------------------------
1. Copy this entire project to a Windows computer
2. Install Python 3.10+ on Windows
3. Open Command Prompt in the project folder
4. Run: pip install -r requirements-build.txt
5. Run: python build_windows_local.py
6. 🎉 Windows build automatically saved to Distribution/Windows/

   After building, you'll have:
   Distribution/Windows/
   ├── SpermVerificationApp/           ← Complete app folder
   │   ├── SpermVerificationApp.exe    ← Main executable
   │   └── _internal/                  ← Required libraries  
   ├── SpermVerificationApp.exe        ← Quick access copy
   └── Run_SpermVerificationApp.bat    ← Double-click launcher

📋 OPTION 3: Use Wine (Advanced)
--------------------------------
1. Install Wine on macOS: brew install wine
2. Install Python for Windows via Wine
3. Follow Option 2 steps within Wine environment

🎯 EXPECTED OUTPUT
------------------
After building, you should have:

Distribution/Windows/
└── SpermVerificationApp/
    ├── SpermVerificationApp.exe     ← Main executable
    ├── _internal/                   ← Required libraries
    │   ├── PySide6/
    │   ├── PIL/
    │   └── ... (many other files)
    └── (other support files)

📤 DISTRIBUTION
---------------
To share with Windows users:
1. Zip the entire "SpermVerificationApp" folder
2. Users extract and double-click "SpermVerificationApp.exe"
3. Windows may show security warning (normal for unsigned apps)

🔧 TROUBLESHOOTING
------------------
- If "Windows Defender" blocks the app: Add exception
- If "App won't start": Install Visual C++ Redistributable
- If "DLL missing": Rebuild with --add-binary for specific DLLs

For the latest Windows build, check GitHub Actions in the repository.
