name: üöÄ Cross-Platform Build

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: SpermVerificationApp-macOS
            asset_name: SpermVerificationApp-macOS.zip
          - os: windows-latest
            artifact_name: SpermVerificationApp-Windows
            asset_name: SpermVerificationApp-Windows.zip

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-build.txt

    - name: üî® Build application (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        python -m PyInstaller --clean build_config.spec
        # Create ZIP for distribution
        cd dist
        zip -r ../SpermVerificationApp-macOS.zip SpermVerificationApp.app

    - name: üî® Build application (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m PyInstaller --clean `
          --onedir `
          --windowed `
          --name SpermVerificationApp `
          --add-data "standalone_app/modern_theme.py;." `
          --add-data "standalone_app/test_data;test_data" `
          --hidden-import "PySide6.QtCore" `
          --hidden-import "PySide6.QtGui" `
          --hidden-import "PySide6.QtWidgets" `
          --hidden-import "PIL._tkinter_finder" `
          --hidden-import "numpy" `
          --hidden-import "pandas" `
          --hidden-import "openpyxl" `
          standalone_app/sperm_verification_app.py
        # Create ZIP for distribution
        cd dist
        Compress-Archive -Path SpermVerificationApp -DestinationPath ../SpermVerificationApp-Windows.zip

    - name: üß™ Test application
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          # Test macOS app
          ./dist/SpermVerificationApp.app/Contents/MacOS/SpermVerificationApp --version || echo "App launched (no version flag)"
        else
          # Test Windows app
          ./dist/SpermVerificationApp/SpermVerificationApp.exe --version || echo "App launched (no version flag)"
        fi

    - name: üì§ Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.asset_name }}

    - name: üéâ Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.asset_name }}
        draft: false
        prerelease: false
        body: |
          ## üéØ Sperm Verification App - Release ${{ github.ref_name }}
          
          ### üì¶ Downloads
          - **macOS**: SpermVerificationApp-macOS.zip
          - **Windows**: SpermVerificationApp-Windows.zip
          
          ### üçé macOS Installation
          1. Download and extract SpermVerificationApp-macOS.zip
          2. Move SpermVerificationApp.app to Applications folder
          3. Right-click ‚Üí Open (first time only, for Gatekeeper)
          
          ### ü™ü Windows Installation
          1. Download and extract SpermVerificationApp-Windows.zip
          2. Run SpermVerificationApp.exe
          3. Windows may show security warning (click "More info" ‚Üí "Run anyway")
          
          ### ‚ú® Features
          - Cross-platform sperm verification tool
          - Grid-based thumbnail interface
          - Full image viewfinder with zoom
          - Timer and session management
          - Excel export with detailed timing data
          - Modern, beautiful UI
          
          ### üîê Code Signing
          - macOS: Unsigned (requires manual approval)
          - Windows: Unsigned (may trigger antivirus warnings)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}